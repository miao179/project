<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <!--
        namespace: 名称空间，一般需要保持全局唯一，最好是和dao层的java接口一致
        可以映射 sql语句 到对应的方法名称和参数、返回类型

        mybatis是使用接口动态代理
    -->
<mapper namespace="com.mjw.miao.mapper.VideoMapper">
    <delete id="deleteByCreateTimeAndPrice" parameterType="java.util.Map">
        delete
        from
         video
        where
         create_time > #{createTime}
        and
         price = #{price}
    </delete>
    <!--
        statement sql
        id: 当前mapper下需要唯一
        resultType: sql查询结果集的封装
    -->
    <select id="selectById" resultType="com.mjw.miao.dao.Video">
        select
         *
        from
         video
        where
         id = #{video_id,jdbcType=INTEGER}
    </select>

    <select id="selectListByXML" resultType="com.mjw.miao.dao.Video">
        select
         *
        from
         video
    </select>
    <select id="selectByPointAndTitleLike" resultType="com.mjw.miao.dao.Video">
        select
         *
        from
         video
        where
         point=#{param1,jdbcType=DOUBLE}
        and
         title
        like
         concat('%',#{param2,jdbcType=VARCHAR},'%')
    </select>

    <insert id="add" parameterType="com.mjw.miao.dao.Video" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO
         `video` (`title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        value
         (
            #{title,jdbcType=VARCHAR},
            #{summary,jdbcType=VARCHAR},
            #{coverImg,jdbcType=VARCHAR},
            #{price,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{point,jdbcType=DOUBLE}
         )
    </insert>
    <insert id="addBatch" parameterType="com.mjw.miao.dao.Video">
        INSERT INTO
         `video` (`title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        values
        <foreach collection="list" item="video" separator=",">
             (
                #{video.title,jdbcType=VARCHAR},
                #{video.summary,jdbcType=VARCHAR},
                #{video.coverImg,jdbcType=VARCHAR},
                #{video.price,jdbcType=INTEGER},
                #{video.createTime,jdbcType=TIMESTAMP},
                #{video.point,jdbcType=DOUBLE}
             )
        </foreach>
    </insert>
    <update id="updateVideo" parameterType="com.mjw.miao.dao.Video">
         UPDATE
          video
         set
          title = #{title,jdbcType=VARCHAR},
          summary = #{summary,jdbcType=VARCHAR},
          cover_img = #{coverImg,jdbcType=VARCHAR},
          price = #{price,jdbcType=INTEGER},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          point = #{point,jdbcType=INTEGER}
         WHERE
          id = #{id}
 </update>
    <update id="updateVideoSelective" parameterType="com.mjw.miao.dao.Video">
         UPDATE
          video
        <trim prefix="set" suffixOverrides=",">
            <if test="title != null">title = #{title,jdbcType=VARCHAR},</if>
            <if test="summary != null">summary = #{summary,jdbcType=VARCHAR},</if>
            <if test="coverImg != null">cover_img = #{coverImg,jdbcType=VARCHAR},</if>
            <if test="price != 0">price = #{price,jdbcType=INTEGER},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="point != null">point = #{point,jdbcType=INTEGER}</if>
        </trim>
        WHERE
        id = #{id}
    </update>
</mapper>